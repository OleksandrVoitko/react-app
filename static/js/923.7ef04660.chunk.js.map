{"version":3,"file":"static/js/923.7ef04660.chunk.js","mappings":"iLAEiBA,EAAMC,OAAO,CAC5BC,QAAS,oC,8BCDJ,MAAMC,EAAQC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAOnBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yEAOpBI,EAAQP,EAAAA,GAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iHAUpBO,EAASV,EAAAA,GAAOW,OAAMC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8PAMtBU,GAAWA,EAAMC,SAAW,GAAK,YAElCD,GAAWA,EAAMC,SAAW,QAAU,UAIpCD,GAAWA,EAAMC,SAAW,GAAK,UACtBD,GAAWA,EAAMC,SAAW,GAAK,c,aC3B1D,MA4IA,EA5ImBC,KACjB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GAEjCO,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KAENH,KADER,GAASG,GAASE,GAItB,GACC,CAACL,EAAOG,EAAOE,IAElB,MAAMO,EAAeC,IAAkC,IAA/BC,QAAQ,KAAEC,EAAI,MAAEC,IAASH,EAC/C,OAAQE,GACN,IAAK,QACH,OAAOd,EAASe,GAClB,IAAK,QACH,OAAOZ,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,GACrB,QACE,OACJ,EAgDF,OACEC,EAAAA,EAAAA,MAAClC,EAAK,CAACmC,SA9CaC,IACpBA,EAAEC,iBAKF,MAAMC,EAAU,CACdN,KAAMf,EACNG,QACAE,YAGFI,EAASa,EAAAA,EAAeC,SAASF,IAUjCpB,EAAS,IACTG,EAAS,IACTE,EAAY,GAAG,EAsBekB,SAAA,EAC5BP,EAAAA,EAAAA,MAAC7B,EAAK,CAACqC,QAAQ,QAAOD,SAAA,CAAC,QAErBE,EAAAA,EAAAA,KAACnC,EAAK,CACJoC,KAAK,OACLC,GAAG,QACHb,KAAK,QACLC,MAAOhB,EACP6B,SAAUjB,EACVkB,UAAU,IACVC,YAAY,qBACZC,UAAQ,QAKZf,EAAAA,EAAAA,MAAC7B,EAAK,CAACqC,QAAQ,QAAOD,SAAA,CAAC,UAErBE,EAAAA,EAAAA,KAACnC,EAAK,CACJoC,KAAK,OACLC,GAAG,QACHb,KAAK,QACLC,MAAOb,EACP0B,SAAUjB,EACVkB,UAAU,IACVC,YAAY,kBACZC,UAAQ,QAMZf,EAAAA,EAAAA,MAAC7B,EAAK,CAACqC,QAAQ,WAAUD,SAAA,CAAC,YAExBE,EAAAA,EAAAA,KAACnC,EAAK,CACJoC,KAAK,OACLC,GAAG,WACHb,KAAK,WACLC,MAAOX,EACPwB,SAAUjB,EACVkB,UAAU,IACVC,YAAY,oBACZC,UAAQ,QAKZN,EAAAA,EAAAA,KAAA,OAAAF,UAQEE,EAAAA,EAAAA,KAAChC,EAAM,CAACiC,KAAK,SAAS7B,UAAWS,EAAQiB,SAAC,YAKtC,ECzIZ,EATeS,KAEXhB,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAAC3B,EAAU,M","sources":["servises/auth-services.js","components/SingUpForm/SingUpForm.styled.jsx","components/SingUpForm/SingUpForm.jsx","pages/SingUp/SingUp.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseUrl: \"https://api.escuelajs.co/api/v1\",\r\n});\r\n\r\nexport const singUp = async (body) => {\r\n  return await instance.post(\"/user/\", body);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Forma = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  gap: 0 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  font: inherit;\r\n\r\n  &:focus {\r\n    outline-color: orangered;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: ${(props) => (props.disabled ? \"\" : \"pointer\")};\r\n  background-color: #e2e5e8;\r\n  color: ${(props) => (props.disabled ? \"white\" : \"black\")};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${(props) => (props.disabled ? \"\" : \"white\")};\r\n    background-color: ${(props) => (props.disabled ? \"\" : \"orangered\")};\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\nimport register from \"../../redux/auth/authOperations\";\r\nimport { singUp } from \"../../servises/auth-services\";\r\n// import { TailSpin } from \"react-loader-spinner\";\r\n// import { useCreateContactMutation } from \"../../../redux/phoneBook/contacts\";\r\n\r\nimport { Button, Forma, Input, Label } from \"./SingUpForm.styled\";\r\n\r\nconst SingUpForm = () => {\r\n  const [login, setLogin] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // const [createContact, { isLoading }] = useCreateContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (login && email && password) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [login, email, password]);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"login\":\r\n        return setLogin(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const elements = e.currentTarget.elements;\r\n    // console.log(elements);\r\n\r\n    const newUser = {\r\n      name: login,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(authOperations.register(newUser));\r\n\r\n    // singUp(newUser)\r\n    //   .then(() => {\r\n    //     console.log(`singUp - OK`);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(`singUp - Error`, error.message);\r\n    //   });\r\n\r\n    setLogin(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n\r\n    // const newContact = {\r\n    //   name,\r\n    //   number: phone,\r\n    // };\r\n\r\n    // try {\r\n    //   await createContact(newContact);\r\n    //   toast.success(`Contact: ${name} - added!`, {\r\n    //     position: toast.POSITION.TOP_RIGHT,\r\n    //   });\r\n    //   setName(\"\");\r\n    //   setPhone(\"\");\r\n    // } catch (error) {\r\n    //   toast.error(error.message, {\r\n    //     position: toast.POSITION.TOP_RIGHT,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Forma onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"login\">\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          id=\"login\"\r\n          name=\"login\"\r\n          value={login}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter your name...\"\r\n          required\r\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          // title=\"Login may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"email\">\r\n        E-mail\r\n        <Input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter e-mail...\"\r\n          required\r\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          // title=\"Login may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </Label>\r\n\r\n      <Label htmlFor=\"password\">\r\n        Password\r\n        <Input\r\n          type=\"text\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          minLength=\"8\"\r\n          placeholder=\"Enter password...\"\r\n          required\r\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        />\r\n      </Label>\r\n      <div>\r\n        {/* {isLoading ? (\r\n          <TailSpin color=\"orangered\" height={53} width={53} />\r\n        ) : (\r\n          <Button type=\"submit\" disabled={!visible}>\r\n            Add\r\n          </Button>\r\n        )} */}\r\n        <Button type=\"submit\" disabled={!visible}>\r\n          Add\r\n        </Button>\r\n      </div>\r\n      {/* <ToastContainer /> */}\r\n    </Forma>\r\n  );\r\n};\r\n\r\nexport default SingUpForm;\r\n","import SingUpForm from \"../../components/SingUpForm\";\r\n\r\nconst SingUp = () => {\r\n  return (\r\n    <div>\r\n      <h3>SingUp</h3>\r\n      <SingUpForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingUp;\r\n"],"names":["axios","create","baseUrl","Forma","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","Button","button","_templateObject4","props","disabled","SingUpForm","login","setLogin","useState","email","setEmail","password","setPassword","visible","setVisible","dispatch","useDispatch","useEffect","handleChange","_ref","target","name","value","_jsxs","onSubmit","e","preventDefault","newUser","authOperations","register","children","htmlFor","_jsx","type","id","onChange","minLength","placeholder","required","SingUp"],"sourceRoot":""}