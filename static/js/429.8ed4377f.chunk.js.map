{"version":3,"file":"static/js/429.8ed4377f.chunk.js","mappings":"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","sources":["components/Bar/Bar.styled.jsx","components/Bar/Bar.jsx","components/Loyout/Loyout.styled.jsx","components/Loyout/Loyout.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactCounter/ContactCounter.styled.jsx","components/ContactCounter/ContactCounter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contacts.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/contactsSelector.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  display: grid;\r\n  gap: 4px;\r\n`;\r\n\r\nexport const TitleH2 = styled.h2`\r\n  margin: 0;\r\n  font-size: 16px;\r\n`;\r\n","import { Header, Section, TitleH2 } from \"./Bar.styled\";\r\n\r\nconst Bar = ({ barName, filterName, children }) => {\r\n  return (\r\n    <Header>\r\n      <Section>\r\n        <TitleH2>{barName}:</TitleH2>\r\n        {children[0]}\r\n      </Section>\r\n      <Section>\r\n        <TitleH2>{filterName}:</TitleH2>\r\n        {children[1]}\r\n      </Section>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  display: grid;\r\n  gap: 16px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`;\r\n","import { Main } from \"./Loyout.styled\";\r\n\r\nconst Loyout = ({ children }) => {\r\n  return <Main>{children}</Main>;\r\n};\r\n\r\nexport default Loyout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Forma = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  gap: 0 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  font: inherit;\r\n\r\n  &:focus {\r\n    outline-color: orangered;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: ${(props) => (props.disabled ? \"\" : \"pointer\")};\r\n  background-color: #e2e5e8;\r\n  color: ${(props) => (props.disabled ? \"white\" : \"black\")};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${(props) => (props.disabled ? \"\" : \"white\")};\r\n    background-color: ${(props) => (props.disabled ? \"\" : \"orangered\")};\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n// import { TailSpin } from 'react-loader-spinner';\r\n// import { useCreateContactMutation } from '../../redux/contacts/contacts';\r\n\r\nimport { Button, Forma, Input, Label } from './ContactForm.styled';\r\nimport { useDispatch } from 'react-redux';\r\n// import { useSelector } from 'react-redux';\r\n// import contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const isLoading = useSelector(contactsSelector.getIsLoading);\r\n  // const [createContact, { isLoading }] = useCreateContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (name && number) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [name, number]);\r\n\r\n  const handleChange = e => {\r\n    if (e.target.id === 'name') {\r\n      setName(e.target.value);\r\n    } else {\r\n      setNumber(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    try {\r\n      await dispatch(contactsOperations.createContact(newContact));\r\n      // createContact(newContact);\r\n      toast.success(`Contact: ${name} - added!`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setName('');\r\n      setNumber('');\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Forma onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"name\">\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter name...\"\r\n          required\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </Label>\r\n\r\n      <Label htmlFor=\"number\">\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          id=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter number...\"\r\n          required\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        />\r\n      </Label>\r\n\r\n      <Button type=\"submit\" disabled={!visible}>\r\n        Add\r\n      </Button>\r\n\r\n      <ToastContainer autoClose={2500} />\r\n    </Forma>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TextP = styled.p`\r\n  margin: 0;\r\n\r\n  > span {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport { TextP } from \"./ContactCounter.styled\";\r\n\r\nconst ContactCounter = ({\r\n  numberOfContacts,\r\n  numberOfFilteredContacts,\r\n  isFiltered,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  let filteredValue = 0;\r\n  if (searchParams.get(\"filter\")) {\r\n    filteredValue = numberOfFilteredContacts;\r\n  }\r\n  // const getFilteredValue = (searchParams) => {\r\n  //   if (searchParams.get(\"filter\")) {\r\n  //     return numberOfFilteredContacts;\r\n  //   } else {\r\n  //     return 0;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <TextP>\r\n        Total - <span>{numberOfContacts}</span>\r\n      </TextP>\r\n      {isFiltered && (\r\n        <TextP>\r\n          Filtered - <span>{filteredValue}</span>\r\n        </TextP>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactCounter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  font: inherit;\r\n\r\n  &:focus {\r\n    outline-color: orangered;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Input } from \"./Filter.styled\";\r\n\r\nconst Filter = ({ setIsFiltered }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    setIsFiltered(false);\r\n    if (searchParams.get(\"filter\")) {\r\n      setIsFiltered(true);\r\n    }\r\n  }, [searchParams, setIsFiltered]);\r\n\r\n  const getFilter = (searchParams) => {\r\n    if (searchParams.get(\"filter\")) {\r\n      const value = searchParams.get(\"filter\");\r\n      return value;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchParams({ filter: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"text\"\r\n        value={getFilter(searchParams)}\r\n        onChange={handleChange}\r\n        placeholder=\"Enter searched name...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DivWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 8px 0;\r\n`;\r\n\r\nexport const PText = styled.p`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  color: #f44336;\r\n\r\n  &:hover {\r\n    background-color: #e2e5e8;\r\n  }\r\n  &:active {\r\n    background-color: #bdbdbd;\r\n  }\r\n`;\r\n","import { MdClose } from 'react-icons/md';\r\n// import { useDeleteContactMutation } from '../../redux/contacts/contacts';\r\nimport { toast } from 'react-toastify';\r\n\r\n// import { TailSpin } from 'react-loader-spinner';\r\n\r\nimport { Button, DivWrapper, PText } from './Contacts.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n// import { useSelector } from 'react-redux';\r\n// import contactsSelector from '../../redux/contacts/contactsSelector';\r\n\r\nconst Contact = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  // const isLoading = useSelector(contactsSelector.getIsLoading);\r\n  // const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  const hadleClick = async id => {\r\n    try {\r\n      await dispatch(contactsOperations.deleteContact(id));\r\n      // deleteContact(id);\r\n      toast.success(`Contact: ${contact.name} - deleted!`);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DivWrapper>\r\n      <PText>\r\n        {contact.name}: {contact.number}\r\n      </PText>\r\n\r\n      {/* {isLoading ? (\r\n        <TailSpin color=\"orangered\" height={24} width={24} />\r\n      ) : (\r\n        <Button onClick={() => hadleClick(contact.id)}>\r\n          <MdClose size={24} />\r\n        </Button>\r\n      )} */}\r\n      <Button onClick={() => hadleClick(contact.id)}>\r\n        <MdClose size={24} />\r\n      </Button>\r\n    </DivWrapper>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  & + & {\r\n    border-top: 1px solid #2f2f37;\r\n  }\r\n`;\r\n","const getContacts = state => state.contacts.contacts;\r\n\r\nconst getIsLoading = state => state.contacts.isLoading;\r\nconst getError = state => state.contacts.error;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getContacts,\r\n  getIsLoading,\r\n  getError,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n// import { useFetchContactsQuery } from '../../redux/contacts/contacts';\r\nimport Contact from '../Contact/Contact';\r\nimport { Wrapper, Li, Ul } from './ContactsList.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nconst ContactsList = ({ setNumberOfContacts, setNumberOfFilteredContacts }) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelector.getContacts);\r\n  const isLoading = useSelector(contactsSelector.getIsLoading);\r\n\r\n  // const { isLoading, data: contacts } = useFetchContactsQuery();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let filterValue = '';\r\n    if (searchParams.get('filter')) {\r\n      filterValue = searchParams.get('filter');\r\n    }\r\n\r\n    if (Array.isArray(contacts)) {\r\n      const filteredContacts = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filterValue.toLowerCase()),\r\n      );\r\n\r\n      setNumberOfContacts(contacts.length);\r\n      setNumberOfFilteredContacts(filteredContacts.length);\r\n    }\r\n  }, [\r\n    isLoading,\r\n    searchParams,\r\n    contacts,\r\n    setNumberOfContacts,\r\n    setNumberOfFilteredContacts,\r\n  ]);\r\n\r\n  const getFilterValue = searchParams => {\r\n    if (searchParams.get('filter')) {\r\n      return searchParams.get('filter');\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const getFilteredContacts = contacts => {\r\n    if (Array.isArray(contacts)) {\r\n      const filteredContacts = contacts.filter(contact =>\r\n        contact.name\r\n          .toLowerCase()\r\n          .includes(getFilterValue(searchParams).toLowerCase()),\r\n      );\r\n\r\n      return filteredContacts;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{isLoading && <Loader />}</div>\r\n      <Ul>\r\n        {getFilteredContacts(contacts) &&\r\n          getFilteredContacts(contacts).map(contact => (\r\n            <Li key={contact.id}>\r\n              <Contact contact={contact} />\r\n            </Li>\r\n          ))}\r\n      </Ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import Bar from '../../components/Bar';\r\nimport Loyout from '../../components/Loyout/Loyout';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactCounter from '../../components/ContactCounter/ContactCounter';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactsList from '../../components/ContactsList';\r\nimport { useState } from 'react';\r\n\r\nconst Contacts = () => {\r\n  const [numberOfContacts, setNumberOfContacts] = useState(0);\r\n  const [numberOfFilteredContacts, setNumberOfFilteredContacts] = useState(0);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  return (\r\n    <Loyout>\r\n      <Bar barName={'Contacts'} filterName={'Find contact by name'}>\r\n        <ContactCounter\r\n          numberOfContacts={numberOfContacts}\r\n          numberOfFilteredContacts={numberOfFilteredContacts}\r\n          isFiltered={isFiltered}\r\n        ></ContactCounter>\r\n        <Filter setIsFiltered={setIsFiltered}></Filter>\r\n      </Bar>\r\n      <ContactForm />\r\n      <ContactsList\r\n        setNumberOfContacts={setNumberOfContacts}\r\n        setNumberOfFilteredContacts={setNumberOfFilteredContacts}\r\n      />\r\n    </Loyout>\r\n  );\r\n};\r\nexport default Contacts;\r\n"],"names":["Header","styled","div","_templateObject","_taggedTemplateLiteral","Section","section","_templateObject2","TitleH2","h2","_templateObject3","_ref","barName","filterName","children","_jsxs","Main","main","_jsx","Forma","form","Label","label","Input","input","Button","button","_templateObject4","props","disabled","ContactForm","name","setName","useState","number","setNumber","visible","setVisible","dispatch","useDispatch","useEffect","handleChange","e","target","id","value","onSubmit","async","preventDefault","newContact","contactsOperations","createContact","toast","success","concat","position","POSITION","TOP_RIGHT","error","message","htmlFor","type","onChange","minLength","placeholder","required","pattern","title","ToastContainer","autoClose","TextP","p","numberOfContacts","numberOfFilteredContacts","isFiltered","searchParams","useSearchParams","filteredValue","get","setIsFiltered","setSearchParams","getFilter","filter","DivWrapper","PText","contact","onClick","deleteContact","hadleClick","MdClose","size","Wrapper","Ul","ul","Li","li","state","contacts","isLoading","setNumberOfContacts","setNumberOfFilteredContacts","useSelector","contactsSelector","fetchContacts","filterValue","Array","isArray","filteredContacts","toLowerCase","includes","length","getFilteredContacts","getFilterValue","Loader","map","Contact","Contacts","Loyout","Bar","ContactCounter","Filter","ContactsList"],"sourceRoot":""}