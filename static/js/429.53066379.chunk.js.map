{"version":3,"file":"static/js/429.53066379.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Bar/Bar.styled.jsx","components/Bar/Bar.jsx","components/Loyout/Loyout.styled.jsx","components/Loyout/Loyout.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactCounter/ContactCounter.styled.jsx","components/ContactCounter/ContactCounter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contacts.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/contactsSelector.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ButtonStyle = styled.button`\r\n  display: inline-flex;\r\n\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n\r\n  border: 0px solid transparent;\r\n  font: inherit;\r\n  /* cursor: pointer; */\r\n  cursor: ${props => (props.disabled ? '' : 'pointer')};\r\n\r\n  background-color: ${props => (props.selected ? 'orangered' : '#e2e5e8')};\r\n  color: ${props => (props.disabled ? 'white' : ' black')};\r\n  opacity: 1;\r\n\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: ${props => (props.disabled ? 1 : 0.8)};\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    color: ${props => (props.disabled ? '' : 'white')};\r\n    background-color: ${props => (props.disabled ? '' : 'orangered')};\r\n    /* color: white;\r\n    background-color: orangered; */\r\n  }\r\n`;\r\n","import { ButtonStyle } from './Button.styled';\r\n\r\nconst Button = ({\r\n  handleClick,\r\n  disabled = false,\r\n  selected = false,\r\n  type = 'button',\r\n  padding = 10,\r\n  children,\r\n}) => {\r\n  return (\r\n    <ButtonStyle\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n      selected={selected}\r\n      type={type}\r\n      style={{\r\n        paddingTop: `${padding}px`,\r\n        paddingBottom: `${padding}px`,\r\n      }}\r\n    >\r\n      {children}\r\n    </ButtonStyle>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  display: grid;\r\n  gap: 4px;\r\n`;\r\n\r\nexport const TitleH2 = styled.h2`\r\n  margin: 0;\r\n  font-size: 16px;\r\n`;\r\n","import { Header, Section, TitleH2 } from \"./Bar.styled\";\r\n\r\nconst Bar = ({ barName, filterName, children }) => {\r\n  return (\r\n    <Header>\r\n      <Section>\r\n        <TitleH2>{barName}:</TitleH2>\r\n        {children[0]}\r\n      </Section>\r\n      <Section>\r\n        <TitleH2>{filterName}:</TitleH2>\r\n        {children[1]}\r\n      </Section>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  display: grid;\r\n  gap: 16px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`;\r\n","import { Main } from \"./Loyout.styled\";\r\n\r\nconst Loyout = ({ children }) => {\r\n  return <Main>{children}</Main>;\r\n};\r\n\r\nexport default Loyout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Forma = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  gap: 0 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  font: inherit;\r\n\r\n  &:focus {\r\n    outline-color: orangered;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: ${(props) => (props.disabled ? \"\" : \"pointer\")};\r\n  background-color: #e2e5e8;\r\n  color: ${(props) => (props.disabled ? \"white\" : \"black\")};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${(props) => (props.disabled ? \"\" : \"white\")};\r\n    background-color: ${(props) => (props.disabled ? \"\" : \"orangered\")};\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport Button from '../Button';\r\n\r\nimport { Forma, Input, Label } from './ContactForm.styled';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (name && number) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [name, number]);\r\n\r\n  const handleChange = e => {\r\n    if (e.target.id === 'name') {\r\n      setName(e.target.value);\r\n    } else {\r\n      setNumber(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    try {\r\n      await dispatch(contactsOperations.createContact(newContact));\r\n\r\n      toast.success(`Contact: ${name} - added!`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setName('');\r\n      setNumber('');\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Forma onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"name\">\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter name...\"\r\n          required\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </Label>\r\n\r\n      <Label htmlFor=\"number\">\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          id=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          placeholder=\"Enter number...\"\r\n          required\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        />\r\n      </Label>\r\n\r\n      <Button type=\"submit\" disabled={!visible}>\r\n        Add\r\n      </Button>\r\n\r\n      <ToastContainer autoClose={2500} />\r\n    </Forma>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wraper = styled.div`\r\n  height: 44px;\r\n`;\r\n\r\nexport const TextP = styled.p`\r\n  margin: 0;\r\n\r\n  > span {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import { useSearchParams } from 'react-router-dom';\r\nimport { TextP, Wraper } from './ContactCounter.styled';\r\n\r\nconst ContactCounter = ({\r\n  numberOfContacts,\r\n  numberOfFilteredContacts,\r\n  isFiltered,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  let filteredValue = 0;\r\n  if (searchParams.get('filter')) {\r\n    filteredValue = numberOfFilteredContacts;\r\n  }\r\n  // const getFilteredValue = (searchParams) => {\r\n  //   if (searchParams.get(\"filter\")) {\r\n  //     return numberOfFilteredContacts;\r\n  //   } else {\r\n  //     return 0;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Wraper>\r\n      <TextP>\r\n        Total - <span>{numberOfContacts}</span>\r\n      </TextP>\r\n      {isFiltered && (\r\n        <TextP>\r\n          Filtered - <span>{filteredValue}</span>\r\n        </TextP>\r\n      )}\r\n    </Wraper>\r\n  );\r\n};\r\n\r\nexport default ContactCounter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  font: inherit;\r\n\r\n  &:focus {\r\n    outline-color: orangered;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Input } from \"./Filter.styled\";\r\n\r\nconst Filter = ({ setIsFiltered }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    setIsFiltered(false);\r\n    if (searchParams.get(\"filter\")) {\r\n      setIsFiltered(true);\r\n    }\r\n  }, [searchParams, setIsFiltered]);\r\n\r\n  const getFilter = (searchParams) => {\r\n    if (searchParams.get(\"filter\")) {\r\n      const value = searchParams.get(\"filter\");\r\n      return value;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchParams({ filter: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"text\"\r\n        value={getFilter(searchParams)}\r\n        onChange={handleChange}\r\n        placeholder=\"Enter searched name...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DivWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 8px 0;\r\n`;\r\n\r\nexport const PText = styled.p`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  color: #f44336;\r\n\r\n  &:hover {\r\n    background-color: #e2e5e8;\r\n  }\r\n  &:active {\r\n    background-color: #bdbdbd;\r\n  }\r\n`;\r\n","import { MdClose } from 'react-icons/md';\r\n// import { useDeleteContactMutation } from '../../redux/contacts/contacts';\r\nimport { toast } from 'react-toastify';\r\n\r\n// import { TailSpin } from 'react-loader-spinner';\r\n\r\nimport { Button, DivWrapper, PText } from './Contacts.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n// import { useSelector } from 'react-redux';\r\n// import contactsSelector from '../../redux/contacts/contactsSelector';\r\n\r\nconst Contact = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  // const isLoading = useSelector(contactsSelector.getIsLoading);\r\n  // const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  const hadleClick = async id => {\r\n    try {\r\n      await dispatch(contactsOperations.deleteContact(id));\r\n      // deleteContact(id);\r\n      toast.success(`Contact: ${contact.name} - deleted!`);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DivWrapper>\r\n      <PText>\r\n        {contact.name}: {contact.number}\r\n      </PText>\r\n\r\n      {/* {isLoading ? (\r\n        <TailSpin color=\"orangered\" height={24} width={24} />\r\n      ) : (\r\n        <Button onClick={() => hadleClick(contact.id)}>\r\n          <MdClose size={24} />\r\n        </Button>\r\n      )} */}\r\n      <Button onClick={() => hadleClick(contact.id)}>\r\n        <MdClose size={24} />\r\n      </Button>\r\n    </DivWrapper>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  & + & {\r\n    border-top: 1px solid #2f2f37;\r\n  }\r\n`;\r\n","const getContacts = state => state.contacts.contacts;\r\nconst getIsLoading = state => state.contacts.isLoading;\r\nconst getError = state => state.contacts.error;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getContacts,\r\n  getIsLoading,\r\n  getError,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n// import { useFetchContactsQuery } from '../../redux/contacts/contacts';\r\nimport Contact from '../Contact/Contact';\r\nimport { Wrapper, Li, Ul } from './ContactsList.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nconst ContactsList = ({ setNumberOfContacts, setNumberOfFilteredContacts }) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelector.getContacts);\r\n  const isLoading = useSelector(contactsSelector.getIsLoading);\r\n\r\n  // const { isLoading, data: contacts } = useFetchContactsQuery();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let filterValue = '';\r\n    if (searchParams.get('filter')) {\r\n      filterValue = searchParams.get('filter');\r\n    }\r\n\r\n    if (Array.isArray(contacts)) {\r\n      const filteredContacts = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filterValue.toLowerCase()),\r\n      );\r\n\r\n      setNumberOfContacts(contacts.length);\r\n      setNumberOfFilteredContacts(filteredContacts.length);\r\n    }\r\n  }, [\r\n    isLoading,\r\n    searchParams,\r\n    contacts,\r\n    setNumberOfContacts,\r\n    setNumberOfFilteredContacts,\r\n  ]);\r\n\r\n  const getFilterValue = searchParams => {\r\n    if (searchParams.get('filter')) {\r\n      return searchParams.get('filter');\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const getFilteredContacts = contacts => {\r\n    if (Array.isArray(contacts)) {\r\n      const filteredContacts = contacts.filter(contact =>\r\n        contact.name\r\n          .toLowerCase()\r\n          .includes(getFilterValue(searchParams).toLowerCase()),\r\n      );\r\n\r\n      return filteredContacts;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{isLoading && <Loader />}</div>\r\n      <Ul>\r\n        {getFilteredContacts(contacts) &&\r\n          getFilteredContacts(contacts).map(contact => (\r\n            <Li key={contact.id}>\r\n              <Contact contact={contact} />\r\n            </Li>\r\n          ))}\r\n      </Ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import Bar from '../../components/Bar';\r\nimport Loyout from '../../components/Loyout/Loyout';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactCounter from '../../components/ContactCounter/ContactCounter';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactsList from '../../components/ContactsList';\r\nimport { useState } from 'react';\r\n\r\nconst Contacts = () => {\r\n  const [numberOfContacts, setNumberOfContacts] = useState(0);\r\n  const [numberOfFilteredContacts, setNumberOfFilteredContacts] = useState(0);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  return (\r\n    <Loyout>\r\n      <Bar barName={'Contacts'} filterName={'Find contact by name'}>\r\n        <ContactCounter\r\n          numberOfContacts={numberOfContacts}\r\n          numberOfFilteredContacts={numberOfFilteredContacts}\r\n          isFiltered={isFiltered}\r\n        ></ContactCounter>\r\n        <Filter setIsFiltered={setIsFiltered}></Filter>\r\n      </Bar>\r\n      <ContactForm />\r\n      <ContactsList\r\n        setNumberOfContacts={setNumberOfContacts}\r\n        setNumberOfFilteredContacts={setNumberOfFilteredContacts}\r\n      />\r\n    </Loyout>\r\n  );\r\n};\r\nexport default Contacts;\r\n"],"names":["ButtonStyle","styled","button","_templateObject","_taggedTemplateLiteral","props","disabled","selected","_ref","handleClick","type","padding","children","_jsx","onClick","style","paddingTop","concat","paddingBottom","Header","div","Section","section","_templateObject2","TitleH2","h2","_templateObject3","barName","filterName","_jsxs","Main","main","Forma","form","Label","label","Input","input","_templateObject4","ContactForm","name","setName","useState","number","setNumber","visible","setVisible","dispatch","useDispatch","useEffect","handleChange","e","target","id","value","onSubmit","async","preventDefault","newContact","contactsOperations","createContact","toast","success","position","POSITION","TOP_RIGHT","error","message","htmlFor","onChange","minLength","placeholder","required","pattern","title","Button","ToastContainer","autoClose","Wraper","TextP","p","numberOfContacts","numberOfFilteredContacts","isFiltered","searchParams","useSearchParams","filteredValue","get","setIsFiltered","setSearchParams","getFilter","filter","DivWrapper","PText","contact","deleteContact","hadleClick","MdClose","size","Wrapper","Ul","ul","Li","li","state","contacts","isLoading","setNumberOfContacts","setNumberOfFilteredContacts","useSelector","contactsSelector","fetchContacts","filterValue","Array","isArray","filteredContacts","toLowerCase","includes","length","getFilteredContacts","getFilterValue","Loader","map","Contact","Contacts","Loyout","Bar","ContactCounter","Filter","ContactsList"],"sourceRoot":""}